{"version":3,"sources":["../src/__prologue__.js","../src/StrategicTicTacToe.js","../src/__epilogue__.js"],"names":["__init__","base","Sermat","ludorum","declare","exports","iterable","Iterable","initialize","__package__","__name__","__dependencies__","__SERMAT__","include","StrategicTicTacToe","Game","constructor","call","this","players","result","moves","next","move"],"mappings":";;uUAEA,SAASA,EAASC,EAAMC,EAAQC,GAAW,aAE1C,IAAIC,EAAUH,EAAKG,QAMfC,GALQJ,EAAKK,SACLL,EAAKM,SACHN,EAAKO,YAIlBC,YAAa,8BACbC,SAAU,8BACVV,SAAUA,EACVW,kBAAmBV,EAAMC,EAAQC,GACjCS,YAAcC,SAAUZ,EAAME,MCbPE,EAAQS,mBAAqBV,EAAQD,EAAQY,MACrEC,YAAa,WACZb,EAAQY,KAAKE,KAAKC,KAAM,OAGzBC,SAAS,KAAO,MAIhBC,OAAQ,aAORC,MAAO,aAOPC,KAAM,SAAcC,OCxBpB,OAAOlB","file":"ludorum-game-strategic-tictactoe.min.js","sourcesContent":["/** Package wrapper and layout.\n*/\nfunction __init__(base, Sermat, ludorum) { \"use strict\";\n// Import synonyms /////////////////////////////////////////////////////////////////////////////////\n\tvar declare = base.declare,\n\t\titerable = base.iterable,\n\t\tIterable = base.Iterable,\n\t\tinitialize = base.initialize;\n\t\n// Library layout. /////////////////////////////////////////////////////////////////////////////////\n\tvar exports = {\n\t\t__package__: 'ludorum-strategic-tictactoe',\n\t\t__name__: 'ludorum_strategic_tictactoe',\n\t\t__init__: __init__,\n\t\t__dependencies__: [base, Sermat, ludorum],\n\t\t__SERMAT__: { include: [base, ludorum] }\n\t};\n\t\n// See `__epilogue__.js`.","/** # Strategic TicTacToe\n*/\nvar StrategicTicTacToe = exports.StrategicTicTacToe = declare(ludorum.Game, {\n\tconstructor: function StrategicTicTacToe() {\n\t\tludorum.Game.call(this, \"Xs\"); //FIXME Poner el jugador activo.\n\t},\n\t\n\tplayers: [\"Xs\", \"Os\"],\n\t\n\t/** Si el juego terminó, retorna un objeto de la forma {Xs:1,Os:-1}; y sino `null`.\n\t*/\n\tresult: function result() {\n\t\t//TODO\n\t},\n\t\n\t/** Si el juego terminó retorna null; sino retorna un objeto con el jugador activo y una lista\n\tde movimientos, e.g. {Xs: [....]}.\n\t*/\n\tmoves: function moves() {\n\t\t//TODO\n\t},\n\t\n\t/** Toma un objeto con los movimientos de cada jugador, y retorna un nuevo estado juego con los\n\tmovimientos ejecutados.\n\t*/\n\tnext: function next(move) {\n\t\t//TODO\n\t}\t\n}); // declare StrategicTicTacToe","// See __prologue__.js\n\treturn exports;\n}"]}